{"version":3,"file":"Calender.stories-6496b9c0.js","sources":["../../src/components/common/calender/constants.ts","../../src/libs/utils/date.ts","../../src/components/common/calender/Calender.tsx"],"sourcesContent":["import { MonthType } from '../../../types/date.ts'\n\nexport const WEEK = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']\nexport const defaultWeek = [0, 0, 0, 0, 0, 0, 0]\nexport const WeekStyle = {\n  WEEKDAY:\n    'w-full h-[40px] text-center justify-center items-center leading-[40px] cursor-pointer font-nsk caption-13 font-bold mr-[15px]',\n  SUN: 'text-red-500',\n  SAT: 'text-blue-500',\n  OPACITY: 'opacity-20'\n}\n\nexport const DECEMBER = 12 as MonthType\nexport const JANUARY = 1 as MonthType\n","import {\n  DECEMBER,\n  JANUARY,\n  WeekStyle\n} from '../../components/common/calender/constants.ts'\nimport { MonthType, DaysInfo, DayType } from '../../types/date.ts'\n\nexport const defaultDate = (): [number, MonthType, DaysInfo[][], DayType] => {\n  const nowDate = new Date()\n  const year = nowDate.getFullYear()\n  const month = (nowDate.getMonth() + 1) as MonthType\n  const days = getDays(year, month)\n  const today = nowDate.getDate() as DayType\n\n  return [year, month, days, today]\n}\n\nexport const getPrevDays = (\n  year: number,\n  month: MonthType\n): [number, MonthType] => {\n  return [year, month]\n}\n\nexport const getDays = (year: number, month: MonthType) => {\n  //실제 Month 데이터는 0 ~ 11이기 때문에 -1 해줘야 한다.\n  const nowMonth = month - 1\n  const lastDay = getLastDayOfMonth(year, month)\n  const lastWeek = getLastWeeksOfMonth(year, month)\n\n  const weeks: DaysInfo[][] = Array.from<DaysInfo[]>({ length: lastWeek })\n    .fill([])\n    .map(() =>\n      Array.from<DaysInfo>({ length: 7 }).fill({\n        year: year,\n        month: month,\n        day: 0,\n        style: ''\n      })\n    )\n\n  const firstDay = new Date(year, nowMonth, 1).getDay()\n  //이번달\n  for (let day = 1; day <= lastDay; day++) {\n    const currentDate = new Date(year, nowMonth, day)\n    const dayOfWeek = currentDate.getDay() // 0 (일요일) ~ 6 (토요일)\n    const weekNumber = Math.floor((day - 1 + firstDay) / 7)\n    weeks[weekNumber][dayOfWeek] = {\n      ...weeks[weekNumber][dayOfWeek],\n      day: day as DayType,\n      style: `${WeekStyle.WEEKDAY} ${dayOfWeek === 0 ? WeekStyle.SUN : ''} ${\n        dayOfWeek === 6 ? WeekStyle.SAT : ''\n      }`\n    }\n  }\n\n  //이전달\n  const prevMonth =\n    month - 1 === 0 ? (DECEMBER as MonthType) : ((month - 1) as MonthType)\n  const prevYear = month - 1 === 0 ? year - 1 : year\n\n  const prevMonthLastDay = getLastDayOfMonth(prevYear, prevMonth)\n  for (let i = 0; i < firstDay; i++) {\n    weeks[0][i] = {\n      year: prevYear,\n      month: prevMonth,\n      day: (prevMonthLastDay - firstDay + i + 1) as DayType,\n      style: `${WeekStyle.WEEKDAY} ${WeekStyle.OPACITY}`\n    }\n  }\n\n  // 다음달\n  // 마지막 주에서 0의 값을 다음 달의 데이터로 채우기\n  const nextMonth = (month + 1 === 13 ? JANUARY : month + 1) as MonthType\n  const nextYear = month + 1 === 13 ? year + 1 : year\n  let nextMonthDay = 1\n  for (let dayOfWeek = 0; dayOfWeek < 7; dayOfWeek++) {\n    if (weeks[lastWeek - 1][dayOfWeek]['day'] === 0) {\n      weeks[lastWeek - 1][dayOfWeek] = {\n        year: nextYear,\n        month: nextMonth,\n        day: nextMonthDay as DayType,\n        style: `${WeekStyle.WEEKDAY} ${WeekStyle.OPACITY} ${\n          dayOfWeek === 0 ? WeekStyle.SUN : ''\n        } ${dayOfWeek === 6 ? WeekStyle.SAT : ''}`\n      }\n      nextMonthDay++\n    }\n  }\n\n  return weeks\n}\n\nfunction getLastDayOfMonth(year: number, month: MonthType) {\n  // month는 0부터 시작 (0: 1월, 1: 2월, ... 11: 12월)\n  return new Date(year, month, 0).getDate()\n}\n\nfunction getLastWeeksOfMonth(year: number, month: MonthType) {\n  const firstDate = new Date(year, month - 1, 1)\n  const lastDate = new Date(year, month, 0)\n\n  const firstDay = firstDate.getDay()\n\n  // 첫 주와 마지막 주를 포함하여 계산\n  const weeks = Math.ceil((lastDate.getDate() + firstDay) / 7)\n\n  return weeks\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { defaultDate, getDays } from '../../../libs/utils/date.ts'\nimport {\n  CalenderType,\n  DaysInfo,\n  DayType,\n  MonthType\n} from '../../../types/date.ts'\nimport CalenderProps from './CalenderType.ts'\nimport { DECEMBER, JANUARY, WEEK, WeekStyle } from './constants.ts'\n\nconst Calender = ({ onClick }: CalenderProps) => {\n  const [defaultYear, defaultMonth, defaultDays, days] = defaultDate()\n  const [calenderState, setCalenderState] = useState<CalenderType>({\n    nowYear: defaultYear,\n    nowMonth: defaultMonth,\n    nowDays: defaultDays,\n    toDay: days\n  })\n  const { nowYear, nowMonth, nowDays, toDay } = calenderState\n\n  const handleDayClick = useCallback(\n    (dayInfo: DaysInfo) => {\n      console.log(dayInfo.month, nowMonth)\n      console.log(dayInfo)\n\n      if (dayInfo.month === nowMonth) {\n        setCalenderState({\n          ...calenderState,\n          toDay: dayInfo.day\n        })\n      } else {\n        const { year, month, day } = dayInfo\n        const days = getDays(year, month)\n        setCalenderState({\n          nowYear: year,\n          nowMonth: month,\n          nowDays: days,\n          toDay: day\n        })\n      }\n\n      onClick(dayInfo)\n    },\n    [calenderState]\n  )\n\n  const nextMonth = () => {\n    let nextMonth = nowMonth + 1\n    let nextYear = nowYear\n\n    if (nextMonth > DECEMBER) {\n      nextYear += 1\n      nextMonth = JANUARY\n    }\n\n    const nextDays = getDays(nextYear, nextMonth as MonthType)\n\n    setCalenderState({\n      nowYear: nextYear,\n      nowMonth: nextMonth as MonthType,\n      nowDays: nextDays,\n      toDay: 1 as DayType\n    })\n  }\n\n  const previousMonth = () => {\n    let previousYear = nowYear\n    let previousMonth = nowMonth - 1\n\n    if (previousMonth < JANUARY) {\n      previousMonth = DECEMBER\n      previousYear -= 1\n    }\n\n    const previousDays = getDays(previousYear, previousMonth as MonthType)\n\n    setCalenderState({\n      nowYear: previousYear,\n      nowMonth: previousMonth as MonthType,\n      nowDays: previousDays,\n      toDay: 1 as DayType\n    })\n  }\n\n  useEffect(() => {\n    console.log('여기서 api콜을 해주세요~')\n  }, [calenderState])\n\n  return (\n    <div className={'flex flex-col justify-center items-center w-[388px]'}>\n      <div className={'flex flex-row'}>\n        <div className={'cursor-pointer'} onClick={previousMonth}>\n          {'<'}\n        </div>\n        <div>{`${nowYear}년 ${nowMonth}월`}</div>\n        <div className={'cursor-pointer'} onClick={nextMonth}>\n          {'>'}\n        </div>\n      </div>\n\n      <div\n        className={\n          'flex flex-row w-full justify-center items-center mr-[8px] ml-[11px] mt-[17px] mb-[12px]'\n        }>\n        {WEEK.map((daysOfWeek, index) => (\n          <div\n            key={index}\n            className={`w-full text-center font-nsk caption-13 font-bold mr-[15px]  ${\n              daysOfWeek === 'SUN' || daysOfWeek === 'SAT'\n                ? WeekStyle[daysOfWeek]\n                : ''\n            }`}>\n            {daysOfWeek}\n          </div>\n        ))}\n      </div>\n      <div\n        className={\n          'flex-col flex w-full justify-center items-center mr-[8px] ml-[11px] mb-[18px]'\n        }>\n        {nowDays.map((week, index) => (\n          <div\n            key={index}\n            className={\n              'flex flex-row w-full justify-center items-center mt-[17px] mb[18px]'\n            }>\n            {week.map((daysInfo, index) => (\n              <div\n                key={index}\n                className={`${daysInfo.style} ${\n                  daysInfo.day === toDay && daysInfo.month === nowMonth\n                    ? 'bg-[rgba(87,164,255,0.2)] rounded-full '\n                    : ''\n                }`}\n                data-id={`${daysInfo.year}-${daysInfo.month}}`}\n                onClick={() => handleDayClick(daysInfo)}>\n                {daysInfo.day}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Calender\n"],"names":["WEEK","WeekStyle","DECEMBER","JANUARY","defaultDate","nowDate","year","month","days","getDays","today","nowMonth","lastDay","getLastDayOfMonth","lastWeek","getLastWeeksOfMonth","weeks","firstDay","day","dayOfWeek","weekNumber","prevMonth","prevYear","prevMonthLastDay","i","nextMonth","nextYear","nextMonthDay","firstDate","lastDate","Calender","onClick","defaultYear","defaultMonth","defaultDays","calenderState","setCalenderState","useState","nowYear","nowDays","toDay","handleDayClick","useCallback","dayInfo","days2","nextMonth2","nextDays","previousMonth","previousYear","previousMonth2","previousDays","useEffect","jsxs","jsx","daysOfWeek","index","week","daysInfo","index2"],"mappings":"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"}