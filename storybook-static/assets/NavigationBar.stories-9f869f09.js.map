{"version":3,"file":"NavigationBar.stories-9f869f09.js","sources":["../../src/components/common/navigationbar/constants.ts","../../src/components/common/navigationbar/NavigationBar.tsx"],"sourcesContent":["import { NavigationStateType } from '@/components/common/navigationbar/NavigationBarType.ts'\n\nexport const SelectText = 'text-black-700'\nexport const SelectIconFillStroke = 'fill-black-700 stroke-black-700'\nexport const SelectIconFill = 'fill-black-700'\nexport const DefaultText = 'text-gray-300'\nexport const DefaultIconFill = 'fill-gray-300 stroke-gray-300'\n\nexport const initNavigationList: NavigationStateType[] = [\n  {\n    icon: 'SearchMap',\n    text: '학원 지도',\n    select: false\n  },\n  {\n    icon: 'Home',\n    text: '홈',\n    select: true\n  },\n  {\n    icon: 'Timetable',\n    text: '시간표',\n    select: false\n  },\n  {\n    icon: 'Info',\n    text: '학원 정보',\n    select: false\n  }\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Icon, { IconType } from '@/components/common/icon/Icon.tsx'\nimport {\n  NavigationBarProps,\n  NavigationStateType\n} from '@/components/common/navigationbar/NavigationBarType.ts'\nimport {\n  DefaultIconFill,\n  DefaultText,\n  initNavigationList,\n  SelectIconFill,\n  SelectText,\n  SelectIconFillStroke\n} from '@/components/common/navigationbar/constants.ts'\n\nconst NavigationBar = ({ selectIcon }: NavigationBarProps) => {\n  const navigate = useNavigate()\n\n  const [navigationState, setNavigationState] = useState<NavigationStateType[]>(\n    initNavigationList.map((item) => ({\n      ...item,\n      select: item.icon === selectIcon\n    }))\n  )\n\n  useEffect(() => {\n    console.log(navigationState)\n    setNavigationState((prevState) =>\n      prevState.map((item) => ({\n        ...item,\n        select: item.icon === selectIcon\n      }))\n    )\n  }, [selectIcon])\n\n  const handleIconClick = useCallback(\n    (selectedIcon: IconType) => {\n      const updatedNavigationState = navigationState.map((item) => {\n        if (item.icon === selectedIcon) {\n          if (item.icon === 'SearchMap') {\n            navigate('/selectcity')\n          } else if (item.icon === 'Home') {\n            navigate('/home')\n          }\n          return { ...item, select: true }\n        }\n        return { ...item, select: false }\n      })\n\n      setNavigationState(updatedNavigationState)\n    },\n    [navigationState]\n  )\n\n  return (\n    <div\n      className={`flex flex-row w-[390px] h-[81px] bg-white-0 border border-solid border-gray-100 absolute bottom-0`}>\n      {navigationState &&\n        navigationState.map((list, index) => (\n          <div\n            key={index}\n            className={\n              'flex flex-col w-full justify-center items-center cursor-pointer'\n            }\n            data-id={list['icon']}\n            onClick={(e) =>\n              handleIconClick(e.currentTarget.dataset.id as IconType)\n            }>\n            <Icon\n              icon={list['icon']}\n              classStyle={`${\n                list['select']\n                  ? list['icon'] === 'Timetable' || list['icon'] === 'Info'\n                    ? SelectIconFillStroke\n                    : SelectIconFill\n                  : DefaultIconFill\n              }`}></Icon>\n            <span\n              className={`${\n                list['select'] ? SelectText : DefaultText\n              } font-nsk body-10`}>\n              {list['text']}\n            </span>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default NavigationBar\n"],"names":["SelectText","SelectIconFillStroke","SelectIconFill","DefaultText","DefaultIconFill","initNavigationList","NavigationBar","selectIcon","navigate","useNavigate","navigationState","setNavigationState","useState","item","useEffect","prevState","handleIconClick","useCallback","selectedIcon","updatedNavigationState","jsx","list","index","jsxs","e","Icon"],"mappings":"6QAEO,MAAMA,EAAa,iBACbC,EAAuB,kCACvBC,EAAiB,iBACjBC,EAAc,gBACdC,EAAkB,gCAElBC,EAA4C,CACvD,CACE,KAAM,YACN,KAAM,QACN,OAAQ,EACV,EACA,CACE,KAAM,OACN,KAAM,IACN,OAAQ,EACV,EACA,CACE,KAAM,YACN,KAAM,MACN,OAAQ,EACV,EACA,CACE,KAAM,OACN,KAAM,QACN,OAAQ,EACV,CACF,ECbAC,EAAA,CAAA,CAAA,WAAAC,KAAA,CACE,MAAAC,EAAAC,IAEA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAA8CP,EAAA,IAAAQ,IAAA,CACV,GAAAA,EAC7B,OAAAA,EAAA,OAAAN,CACmB,EAAA,CACtB,EAGJO,EAAAA,UAAA,IAAA,CACE,QAAA,IAAAJ,CAAA,EACAC,EAAAI,GAAAA,EAAA,IAAAF,IAAA,CAC2B,GAAAA,EACpB,OAAAA,EAAA,OAAAN,CACmB,EAAA,CACtB,CACJ,EAAA,CAAAA,CAAA,CAAA,EAGF,MAAAS,EAAAC,EAAA,YAAwBC,GAAA,CAEpB,MAAAC,EAAAT,EAAA,IAAAG,GACEA,EAAA,OAAAK,GACEL,EAAA,OAAA,YACEL,EAAA,aAAA,EAAsBK,EAAA,OAAA,QAEtBL,EAAA,OAAA,EAEF,CAAA,GAAAK,EAAA,OAAA,EAAA,GAEF,CAAA,GAAAA,EAAA,OAAA,EAAA,CAAgC,EAGlCF,EAAAQ,CAAA,CAAyC,EAC3C,CAAAT,CAAA,CACgB,EAGlB,OAAAU,EAAA,IACE,MAAC,CAAA,UAAA,oGACY,SAAAV,GAAAA,EAAA,IAAA,CAAAW,EAAAC,IAAAC,EAAA,KAGP,MAAC,CAAA,UAAA,kEAGG,UAAAF,EAAA,KAEkB,QAAAG,GAAAR,EAAAQ,EAAA,cAAA,QAAA,EAAA,EAEoC,SAAA,CAExDJ,EAAA,IAAAK,EAAC,CAAA,KAAAJ,EAAA,KACkB,WAAA,GAAAA,EAAA,OAAAA,EAAA,OAAA,aAAAA,EAAA,OAAA,OAAApB,EAAAC,EAAAE,CAAA,EAOjB,CAAA,EAAIgB,EAAA,IACN,OAAC,CAAA,UAAA,GAAAC,EAAA,OAAArB,EAAAG,CAAA,oBAGC,SAAAkB,EAAA,IACY,CAAA,CACd,CAAA,EAAAC,CAtBK,CAAA,CAwBR,CAAA,CAGT;;;;"}